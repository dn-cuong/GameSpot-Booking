{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Reserve.css'; // Make sure to import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(\"\"); // State to store the selected date\n  const [selectedComputer, setSelectedComputer] = useState(\"\"); // State to store the selected computer\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token found\n    }\n  }, [navigate]);\n  const fetchAvailableComputers = async date => {\n    try {\n      const token = localStorage.getItem('jwt');\n      const response = await axios.post('http://localhost:3000/available-computers', {\n        date\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const formattedComputers = response.data.map(item => `Computer #${item.computer_id}`);\n      console.log(formattedComputers);\n      setAvailableComputers(formattedComputers); // Store the list of available computers\n      setSelectedComputer(\"\"); // Reset selected computer when fetching new availability\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n  const handleDateChange = event => {\n    const newDate = event.target.value;\n    setSelectedDate(newDate); // Update the selected date\n    if (newDate) {\n      fetchAvailableComputers(newDate); // Automatically fetch available computers for the new date\n    } else {\n      setAvailableComputers([]); // Clear available computers if date is cleared\n    }\n  };\n  const handleComputerSelect = event => {\n    setSelectedComputer(event.target.value); // Update the selected computer\n  };\n  const handleConfirmSelection = () => {\n    // Handle confirmation logic here (e.g., navigating or showing a message)\n    console.log(`Selected: ${selectedComputer}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose your date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: handleDateChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Available Computers for \", selectedDate, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedComputer,\n      onChange: handleComputerSelect,\n      disabled: !selectedDate,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), availableComputers.length > 0 ? availableComputers.map((computer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: computer,\n        children: computer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        children: \"No computers available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirmSelection,\n      disabled: !selectedComputer,\n      children: \"Confirm Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Reserve, \"5iW9ulJ+Rj4rcdixhfwhCTJoxEo=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Reserve","_s","availableComputers","setAvailableComputers","selectedDate","setSelectedDate","selectedComputer","setSelectedComputer","navigate","token","localStorage","getItem","fetchAvailableComputers","date","response","post","headers","Authorization","formattedComputers","data","map","item","computer_id","console","log","error","handleDateChange","event","newDate","target","value","handleComputerSelect","handleConfirmSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","disabled","length","computer","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Reserve.css'; // Make sure to import your CSS file\n\nconst Reserve = () => {\n    const [availableComputers, setAvailableComputers] = useState([]);\n    const [selectedDate, setSelectedDate] = useState(\"\"); // State to store the selected date\n    const [selectedComputer, setSelectedComputer] = useState(\"\"); // State to store the selected computer\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem('jwt');\n        if (!token) {\n            navigate('/login'); // Redirect to login if no token found\n        }\n    }, [navigate]);\n\n    const fetchAvailableComputers = async (date) => {\n        try {\n            const token = localStorage.getItem('jwt');\n            const response = await axios.post('http://localhost:3000/available-computers', { date }, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const formattedComputers = response.data.map(item => `Computer #${item.computer_id}`);\n            console.log(formattedComputers);\n            setAvailableComputers(formattedComputers); // Store the list of available computers\n            setSelectedComputer(\"\"); // Reset selected computer when fetching new availability\n        } catch (error) {\n            console.error('Error fetching available computers:', error);\n        }\n    };\n\n    const handleDateChange = (event) => {\n        const newDate = event.target.value;\n        setSelectedDate(newDate); // Update the selected date\n        if (newDate) {\n            fetchAvailableComputers(newDate); // Automatically fetch available computers for the new date\n        } else {\n            setAvailableComputers([]); // Clear available computers if date is cleared\n        }\n    };\n\n    const handleComputerSelect = (event) => {\n        setSelectedComputer(event.target.value); // Update the selected computer\n    };\n\n    const handleConfirmSelection = () => {\n        // Handle confirmation logic here (e.g., navigating or showing a message)\n        console.log(`Selected: ${selectedComputer}`);\n    };\n\n    return (\n        <div className=\"reserve_container\">\n            <form>\n                <h3>Choose your date:</h3>\n\n                <label>\n                    \n                    <input type=\"date\" value={selectedDate} onChange={handleDateChange} required />\n                </label>\n            </form>\n\n            <h3>Available Computers for {selectedDate}:</h3>\n            <select value={selectedComputer} onChange={handleComputerSelect} disabled={!selectedDate} required>\n                <option value=\"\">Select a Computer</option>\n                {availableComputers.length > 0 ? (\n                    availableComputers.map((computer, index) => (\n                        <option key={index} value={computer}>{computer}</option>\n                    ))\n                ) : (\n                    <option disabled>No computers available.</option>\n                )}\n            </select>\n            <button onClick={handleConfirmSelection} disabled={!selectedComputer}>Confirm Selection</button>\n        </div>\n    );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}