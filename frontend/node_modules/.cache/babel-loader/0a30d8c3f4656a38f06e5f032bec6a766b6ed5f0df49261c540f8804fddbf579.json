{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n  const [message, setMessage] = useState('');\n  const [showComputers, setShowComputers] = useState(false); // Biến để kiểm soát việc hiển thị danh sách máy\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    setShowComputers(false); // Reset trạng thái hiển thị máy khi ngày thay đổi\n  };\n  const handleContinue = async () => {\n    if (!date) {\n      setMessage(\"Please select a date.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`/api/computers?date=${date}`);\n      setAvailableComputers(response.data);\n      setShowComputers(true); // Hiển thị danh sách máy tính\n    } catch (error) {\n      console.error(\"Error fetching available computers:\", error);\n      setAvailableComputers([]); // Reset danh sách máy tính khi có lỗi\n      setMessage(\"Error fetching available computers.\");\n    }\n  };\n  const handleReserve = async () => {\n    if (!date || !selectedComputer) {\n      setMessage(\"Please select a date and a computer to reserve.\");\n      return;\n    }\n    try {\n      const response = await axios.post('/reserve', {\n        date: date,\n        computer_id: selectedComputer\n      });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/'); // Chuyển hướng về trang chủ sau 2 giây\n      }, 2000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error making reservation:\", error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error making reservation\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Select Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleContinue,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showComputers && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Computers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), availableComputers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"computer\",\n              value: computer.computer_id,\n              onChange: () => setSelectedComputer(computer.computer_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), ` Computer ID: ${computer.computer_id} - Status: ${computer.status}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)\n        }, computer.computer_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No available computers for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReserve,\n        disabled: !selectedComputer,\n        children: \"Reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"zNblDB2aDIpNs9bTC9gjdqqezu4=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","availableComputers","setAvailableComputers","selectedComputer","setSelectedComputer","message","setMessage","showComputers","setShowComputers","token","localStorage","getItem","handleDateChange","e","target","value","handleContinue","response","get","data","error","console","handleReserve","post","computer_id","setTimeout","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","length","map","computer","name","status","disabled","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n  const [message, setMessage] = useState('');\n  const [showComputers, setShowComputers] = useState(false); // Biến để kiểm soát việc hiển thị danh sách máy\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  const handleDateChange = (e) => {\n    setDate(e.target.value);\n    setShowComputers(false); // Reset trạng thái hiển thị máy khi ngày thay đổi\n  };\n\n  const handleContinue = async () => {\n    if (!date) {\n      setMessage(\"Please select a date.\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(`/api/computers?date=${date}`);\n      setAvailableComputers(response.data);\n      setShowComputers(true); // Hiển thị danh sách máy tính\n    } catch (error) {\n      console.error(\"Error fetching available computers:\", error);\n      setAvailableComputers([]); // Reset danh sách máy tính khi có lỗi\n      setMessage(\"Error fetching available computers.\");\n    }\n  };\n\n  const handleReserve = async () => {\n    if (!date || !selectedComputer) {\n      setMessage(\"Please select a date and a computer to reserve.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post('/reserve', {\n        date: date,\n        computer_id: selectedComputer,\n      });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/'); // Chuyển hướng về trang chủ sau 2 giây\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error making reservation:\", error);\n      setMessage(error.response?.data?.message || \"Error making reservation\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <div>\n        <label htmlFor=\"date\">Select Date:</label>\n        <input\n          type=\"date\"\n          id=\"date\"\n          value={date}\n          onChange={handleDateChange}\n        />\n        <button onClick={handleContinue}>Continue</button>\n      </div>\n      {showComputers && (\n        <div>\n          <h2>Available Computers</h2>\n          {availableComputers.length > 0 ? (\n            <ul>\n              {availableComputers.map((computer) => (\n                <li key={computer.computer_id}>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"computer\"\n                      value={computer.computer_id}\n                      onChange={() => setSelectedComputer(computer.computer_id)}\n                    />\n                    {` Computer ID: ${computer.computer_id} - Status: ${computer.status}`}\n                  </label>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No available computers for this date.</p>\n          )}\n          <button onClick={handleReserve} disabled={!selectedComputer}>Reserve</button>\n        </div>\n      )}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}