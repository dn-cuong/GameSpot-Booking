{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n\n  // Hàm lấy danh sách máy tính khả dụng\n  const fetchAvailableComputers = async date => {\n    try {\n      const response = await axios.post('/available-computers', {\n        date\n      }); // Gọi tới route lấy máy tính khả dụng\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn ngày\n  const handleDateChange = event => {\n    const date = event.target.value;\n    setSelectedDate(date);\n    if (date) {\n      fetchAvailableComputers(date); // Gửi ngày đến server\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn máy tính\n  const handleComputerSelect = computerId => {\n    setSelectedComputer(computerId);\n  };\n\n  // Hàm gửi yêu cầu đặt máy\n  const handleReserve = async () => {\n    if (!selectedDate || !selectedComputer) {\n      alert('Please select a date and a computer.');\n      return;\n    }\n    try {\n      const response = await axios.post('/reserve', {\n        date: selectedDate,\n        computer_id: selectedComputer\n      });\n      alert(response.data.message); // Hiển thị thông báo từ server\n      // Xử lý thêm nếu cần sau khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error reserving computer:', error);\n      alert('Failed to reserve computer. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve a Computer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Select Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: selectedDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAvailableComputers,\n      children: \"Check Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), availableComputers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Computers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"computer\",\n              value: computer.computer_id,\n              onChange: () => handleComputerSelect(computer.computer_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), \"Computer ID: \", computer.computer_id, \" - Status: \", computer.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, computer.computer_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      children: \"Reserve Computer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"SmmtuGryF6E/R7hmGHfjMuQzlR0=\");\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Reserve","_s","selectedDate","setSelectedDate","availableComputers","setAvailableComputers","selectedComputer","setSelectedComputer","fetchAvailableComputers","date","response","post","data","error","console","handleDateChange","event","target","value","handleComputerSelect","computerId","handleReserve","alert","computer_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","length","map","computer","name","status","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const [selectedDate, setSelectedDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n\n  // Hàm lấy danh sách máy tính khả dụng\n  const fetchAvailableComputers = async (date) => {\n    try {\n      const response = await axios.post('/available-computers', { date }); // Gọi tới route lấy máy tính khả dụng\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn ngày\n  const handleDateChange = (event) => {\n    const date = event.target.value;\n    setSelectedDate(date);\n    if (date) {\n      fetchAvailableComputers(date); // Gửi ngày đến server\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn máy tính\n  const handleComputerSelect = (computerId) => {\n    setSelectedComputer(computerId);\n  };\n\n  // Hàm gửi yêu cầu đặt máy\n  const handleReserve = async () => {\n    if (!selectedDate || !selectedComputer) {\n      alert('Please select a date and a computer.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/reserve', {\n        date: selectedDate,\n        computer_id: selectedComputer,\n      });\n      alert(response.data.message); // Hiển thị thông báo từ server\n      // Xử lý thêm nếu cần sau khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error reserving computer:', error);\n      alert('Failed to reserve computer. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve a Computer</h1>\n      <label htmlFor=\"date\">Select Date:</label>\n      <input type=\"date\" id=\"date\" value={selectedDate} onChange={handleDateChange} />\n      <button onClick={fetchAvailableComputers}>Check Availability</button>\n\n      {availableComputers.length > 0 && (\n        <div>\n          <h2>Available Computers</h2>\n          <ul>\n            {availableComputers.map((computer) => (\n              <li key={computer.computer_id}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"computer\"\n                    value={computer.computer_id}\n                    onChange={() => handleComputerSelect(computer.computer_id)}\n                  />\n                  Computer ID: {computer.computer_id} - Status: {computer.status}\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <button onClick={handleReserve}>Reserve Computer</button>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}