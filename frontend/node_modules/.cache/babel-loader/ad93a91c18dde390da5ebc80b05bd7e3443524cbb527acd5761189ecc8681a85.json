{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n  const handleDateChange = event => {\n    setDate(event.target.value); // Cập nhật trạng thái ngày\n  };\n  const fetchAvailableComputers = async () => {\n    if (!date) {\n      alert('Vui lòng chọn một ngày trước khi xem máy tính khả dụng.'); // Thông báo nếu chưa chọn ngày\n      return;\n    }\n    try {\n      const response = await axios.post('/available-computers', {\n        date\n      }); // Gửi ngày đến server\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n  const handleReserve = async computer_id => {\n    try {\n      const response = await axios.post('/reserve', {\n        date,\n        computer_id\n      });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error making reservation:', error);\n      alert('Error making reservation: ' + error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Choose a date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAvailableComputers,\n      children: \"Xem M\\xE1y T\\xEDnh Kh\\u1EA3 D\\u1EE5ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Computers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [computer.computer_id, \" - \", computer.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReserve(computer.computer_id),\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, computer.computer_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"ZxC66c5fZi7evmdvLu/oYrgDaRg=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","availableComputers","setAvailableComputers","token","localStorage","getItem","handleDateChange","event","target","value","fetchAvailableComputers","alert","response","post","data","error","console","handleReserve","computer_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","map","computer","status","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  const handleDateChange = (event) => {\n    setDate(event.target.value); // Cập nhật trạng thái ngày\n  };\n\n  const fetchAvailableComputers = async () => {\n    if (!date) {\n      alert('Vui lòng chọn một ngày trước khi xem máy tính khả dụng.'); // Thông báo nếu chưa chọn ngày\n      return;\n    }\n    \n    try {\n      const response = await axios.post('/available-computers', { date }); // Gửi ngày đến server\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n\n  const handleReserve = async (computer_id) => {\n    try {\n      const response = await axios.post('/reserve', { date, computer_id });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error making reservation:', error);\n      alert('Error making reservation: ' + error.response.data.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <label htmlFor=\"date\">Choose a date:</label>\n      <input\n        type=\"date\"\n        id=\"date\"\n        value={date}\n        onChange={handleDateChange}\n      />\n      <button onClick={fetchAvailableComputers}>Xem Máy Tính Khả Dụng</button>\n      \n      <h2>Available Computers:</h2>\n      <ul>\n        {availableComputers.map((computer) => (\n          <li key={computer.computer_id}>\n            {computer.computer_id} - {computer.status}\n            <button onClick={() => handleReserve(computer.computer_id)}>Reserve</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}