{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const navigate = useNavigate();\n\n  // Giả sử bạn đã thiết lập một ngày cụ thể\n  const specificDate = \"2024-11-01\"; // Thay đổi thành ngày bạn muốn kiểm tra\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetchAvailableComputers(specificDate);\n    }\n  }, [navigate]);\n  const fetchAvailableComputers = async date => {\n    try {\n      const token = localStorage.getItem('jwt');\n      console.log('Token:', token); // Log token để kiểm tra\n\n      const response = await axios.post('http://localhost:3000/available-computers', {\n        date\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Computers for \", specificDate, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: computer.computer_name\n      }, computer.computer_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Reserve, \"s3K5HLinj5xeegp368LYYkzssog=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Reserve","_s","availableComputers","setAvailableComputers","navigate","specificDate","token","localStorage","getItem","fetchAvailableComputers","date","console","log","response","post","headers","Authorization","data","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","computer","computer_name","computer_id","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Reserve = () => {\n    const [availableComputers, setAvailableComputers] = useState([]);\n    const navigate = useNavigate();\n\n    // Giả sử bạn đã thiết lập một ngày cụ thể\n    const specificDate = \"2024-11-01\"; // Thay đổi thành ngày bạn muốn kiểm tra\n\n    useEffect(() => {\n        const token = localStorage.getItem('jwt');\n        if (!token) {\n            navigate('/login');\n        } else {\n            fetchAvailableComputers(specificDate);\n        }\n    }, [navigate]);\n\n    const fetchAvailableComputers = async (date) => {\n        try {\n            const token = localStorage.getItem('jwt');\n            console.log('Token:', token); // Log token để kiểm tra\n\n            const response = await axios.post('http://localhost:3000/available-computers', { date }, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n        } catch (error) {\n            console.error('Error fetching available computers:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Reserve Page</h1>\n            <h2>Available Computers for {specificDate}:</h2>\n            <ul>\n                {availableComputers.map((computer) => (\n                    <li key={computer.computer_id}>{computer.computer_name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Reserve;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,YAAY,GAAG,YAAY,CAAC,CAAC;;EAEnCX,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAI,CAACF,KAAK,EAAE;MACRF,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAM;MACHK,uBAAuB,CAACJ,YAAY,CAAC;IACzC;EACJ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMK,uBAAuB,GAAG,MAAOC,IAAI,IAAK;IAC5C,IAAI;MACA,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;MACzCG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,KAAK,CAAC,CAAC,CAAC;;MAE9B,MAAMO,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,2CAA2C,EAAE;QAAEJ;MAAK,CAAC,EAAE;QACrFK,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUV,KAAK;QAClC;MACJ,CAAC,CAAC;MACFH,qBAAqB,CAACU,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC9G;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA;MAAAqB,QAAA,GAAI,0BAAwB,EAACf,YAAY,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDzB,OAAA;MAAAqB,QAAA,EACKlB,kBAAkB,CAACuB,GAAG,CAAEC,QAAQ,iBAC7B3B,OAAA;QAAAqB,QAAA,EAAgCM,QAAQ,CAACC;MAAa,GAA7CD,QAAQ,CAACE,WAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACvB,EAAA,CA3CID,OAAO;EAAA,QAEQH,WAAW;AAAA;AAAAgC,EAAA,GAF1B7B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}