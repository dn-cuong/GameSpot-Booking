{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [loading, setLoading] = useState(false); // Trạng thái tải dữ liệu\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n  const handleDateChange = event => {\n    setDate(event.target.value); // Cập nhật trạng thái ngày\n  };\n  const fetchAvailableComputers = async () => {\n    if (!date) {\n      alert('Vui lòng chọn một ngày trước khi xem máy tính khả dụng.'); // Thông báo nếu chưa chọn ngày\n      return;\n    }\n    setLoading(true); // Bắt đầu tải dữ liệu\n    try {\n      const response = await axios.post('/available-computers', {\n        date\n      }); // Gửi ngày đến server\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n      alert('Lỗi khi lấy danh sách máy tính khả dụng.');\n    } finally {\n      setLoading(false); // Kết thúc tải dữ liệu\n    }\n  };\n  const handleReserve = async computer_id => {\n    try {\n      const response = await axios.post('/reserve', {\n        date,\n        computer_id\n      });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error making reservation:', error);\n      alert('Lỗi khi đặt chỗ: ' + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Có lỗi xảy ra.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Ch\\u1ECDn ng\\xE0y:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAvailableComputers,\n      disabled: loading,\n      children: loading ? 'Đang tải...' : 'Xem Máy Tính Khả Dụng'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"M\\xE1y T\\xEDnh Kh\\u1EA3 D\\u1EE5ng:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [`Máy ${computer.computer_id} - Trạng thái: ${computer.status}`, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReserve(computer.computer_id),\n          children: \"\\u0110\\u1EB7t Ch\\u1ED7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, computer.computer_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"OVDMYu2QfJPkULPzRQRb6mfTEpQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","availableComputers","setAvailableComputers","loading","setLoading","token","localStorage","getItem","handleDateChange","event","target","value","fetchAvailableComputers","alert","response","post","data","error","console","handleReserve","computer_id","message","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","disabled","map","computer","status","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [loading, setLoading] = useState(false); // Trạng thái tải dữ liệu\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  const handleDateChange = (event) => {\n    setDate(event.target.value); // Cập nhật trạng thái ngày\n  };\n\n  const fetchAvailableComputers = async () => {\n    if (!date) {\n      alert('Vui lòng chọn một ngày trước khi xem máy tính khả dụng.'); // Thông báo nếu chưa chọn ngày\n      return;\n    }\n\n    setLoading(true); // Bắt đầu tải dữ liệu\n    try {\n      const response = await axios.post('/available-computers', { date }); // Gửi ngày đến server\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n      alert('Lỗi khi lấy danh sách máy tính khả dụng.');\n    } finally {\n      setLoading(false); // Kết thúc tải dữ liệu\n    }\n  };\n\n  const handleReserve = async (computer_id) => {\n    try {\n      const response = await axios.post('/reserve', { date, computer_id });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error making reservation:', error);\n      alert('Lỗi khi đặt chỗ: ' + error.response?.data?.message || 'Có lỗi xảy ra.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <label htmlFor=\"date\">Chọn ngày:</label>\n      <input\n        type=\"date\"\n        id=\"date\"\n        value={date}\n        onChange={handleDateChange}\n      />\n      <button onClick={fetchAvailableComputers} disabled={loading}>\n        {loading ? 'Đang tải...' : 'Xem Máy Tính Khả Dụng'}\n      </button>\n\n      <h2>Máy Tính Khả Dụng:</h2>\n      <ul>\n        {availableComputers.map((computer) => (\n          <li key={computer.computer_id}>\n            {`Máy ${computer.computer_id} - Trạng thái: ${computer.status}`}\n            <button onClick={() => handleReserve(computer.computer_id)}>Đặt Chỗ</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}