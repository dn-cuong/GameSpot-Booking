{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [computerId, setComputerId] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  // Hàm gọi đến server để lấy danh sách máy tính khả dụng\n  const fetchAvailableComputers = async selectedDate => {\n    try {\n      const response = await axios.post('/available-computers', {\n        date: selectedDate\n      }); // Gọi tới route lấy máy tính khả dụng\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn ngày\n  const handleDateChange = event => {\n    const selectedDate = event.target.value;\n    setDate(selectedDate);\n    fetchAvailableComputers(selectedDate); // Gọi hàm lấy máy tính khả dụng\n  };\n\n  // Hàm thực hiện đặt chỗ\n  const handleReserve = async () => {\n    try {\n      const response = await axios.post('/reserve', {\n        date,\n        computer_id: computerId\n      });\n      alert(response.data.message); // Hiển thị thông báo thành công\n    } catch (error) {\n      console.error('Error making reservation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Select Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"computers\",\n      children: \"Available Computers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"computers\",\n      disabled: !date // Chỉ cho phép chọn máy nếu đã chọn ngày\n      ,\n      onChange: e => setComputerId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: computer.computer_id,\n        children: [computer.computer_id, \" - \", computer.status]\n      }, computer.computer_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      disabled: !computerId,\n      children: \"Reserve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"qLwKHZhxRoe7phF1CSu+1S4b6P4=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","availableComputers","setAvailableComputers","computerId","setComputerId","token","localStorage","getItem","fetchAvailableComputers","selectedDate","response","post","data","error","console","handleDateChange","event","target","value","handleReserve","computer_id","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","disabled","e","map","computer","status","onClick","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [computerId, setComputerId] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  // Hàm gọi đến server để lấy danh sách máy tính khả dụng\n  const fetchAvailableComputers = async (selectedDate) => {\n    try {\n      const response = await axios.post('/available-computers', { date: selectedDate }); // Gọi tới route lấy máy tính khả dụng\n      setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Error fetching available computers:', error);\n    }\n  };\n\n  // Hàm xử lý khi người dùng chọn ngày\n  const handleDateChange = (event) => {\n    const selectedDate = event.target.value;\n    setDate(selectedDate);\n    fetchAvailableComputers(selectedDate); // Gọi hàm lấy máy tính khả dụng\n  };\n\n  // Hàm thực hiện đặt chỗ\n  const handleReserve = async () => {\n    try {\n      const response = await axios.post('/reserve', { date, computer_id: computerId });\n      alert(response.data.message); // Hiển thị thông báo thành công\n    } catch (error) {\n      console.error('Error making reservation:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <label htmlFor=\"date\">Select Date:</label>\n      <input type=\"date\" id=\"date\" value={date} onChange={handleDateChange} />\n      <br />\n      <label htmlFor=\"computers\">Available Computers:</label>\n      <select\n        id=\"computers\"\n        disabled={!date} // Chỉ cho phép chọn máy nếu đã chọn ngày\n        onChange={(e) => setComputerId(e.target.value)}\n      >\n        <option value=\"\">Select a computer</option>\n        {availableComputers.map((computer) => (\n          <option key={computer.computer_id} value={computer.computer_id}>\n            {computer.computer_id} - {computer.status}\n          </option>\n        ))}\n      </select>\n      <br />\n      <button onClick={handleReserve} disabled={!computerId}>Reserve</button>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}