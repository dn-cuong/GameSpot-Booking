{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Chuyển hướng đến trang login nếu không có token\n    }\n  }, [navigate]);\n  const fetchAvailableComputers = async date => {\n    try {\n      const response = await axios.post('/available-computers', {\n        date\n      }); // Gọi đến route lấy máy tính khả dụng\n      //   setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Erhror fetching available computers:', error);\n    }\n  };\n  const handleDateChange = event => {\n    const date = event.target.value;\n    setSelectedDate(date);\n    if (date) {\n      fetchAvailableComputers(date); // Gửi ngày đến server ngay khi chọn ngày\n    } else {\n      setAvailableComputers([]); // Nếu không có ngày, reset danh sách máy tính\n    }\n  };\n  const handleComputerSelect = computerId => {\n    setSelectedComputer(computerId);\n  };\n  const handleReserve = async () => {\n    if (!selectedDate || !selectedComputer) {\n      alert('Please select a date and a computer.');\n      return;\n    }\n    try {\n      const response = await axios.post('/reserve', {\n        date: selectedDate,\n        computer_id: selectedComputer\n      });\n      alert(response.data.message); // Hiển thị thông báo từ server\n      // Xử lý thêm nếu cần sau khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error reserving computer:', error);\n      alert('Failed to reserve computer. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve a Computer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Select Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: selectedDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), availableComputers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Computers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"computer\",\n              value: computer.computer_id,\n              onChange: () => handleComputerSelect(computer.computer_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), \"Computer ID: \", computer.computer_id, \" - Status: \", computer.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, computer.computer_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      children: \"Reserve Computer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"XyYlHMgrP3bLxSn06k1OIjzf00M=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","selectedDate","setSelectedDate","availableComputers","setAvailableComputers","selectedComputer","setSelectedComputer","token","localStorage","getItem","fetchAvailableComputers","date","response","post","error","console","handleDateChange","event","target","value","handleComputerSelect","computerId","handleReserve","alert","computer_id","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","length","map","computer","name","status","onClick","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Chuyển hướng đến trang login nếu không có token\n    }\n  }, [navigate]);\n\n  const fetchAvailableComputers = async (date) => {\n    try {\n      const response = await axios.post('/available-computers', { date }); // Gọi đến route lấy máy tính khả dụng\n    //   setAvailableComputers(response.data); // Lưu danh sách máy tính khả dụng\n    } catch (error) {\n      console.error('Erhror fetching available computers:', error);\n    }\n  };\n\n  const handleDateChange = (event) => {\n    const date = event.target.value;\n    setSelectedDate(date);\n    if (date) {\n      fetchAvailableComputers(date); // Gửi ngày đến server ngay khi chọn ngày\n    } else {\n      setAvailableComputers([]); // Nếu không có ngày, reset danh sách máy tính\n    }\n  };\n\n  const handleComputerSelect = (computerId) => {\n    setSelectedComputer(computerId);\n  };\n\n  const handleReserve = async () => {\n    if (!selectedDate || !selectedComputer) {\n      alert('Please select a date and a computer.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/reserve', {\n        date: selectedDate,\n        computer_id: selectedComputer,\n      });\n      alert(response.data.message); // Hiển thị thông báo từ server\n      // Xử lý thêm nếu cần sau khi đặt chỗ thành công\n    } catch (error) {\n      console.error('Error reserving computer:', error);\n      alert('Failed to reserve computer. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve a Computer</h1>\n      <label htmlFor=\"date\">Select Date:</label>\n      <input type=\"date\" id=\"date\" value={selectedDate} onChange={handleDateChange} />\n\n      {availableComputers.length > 0 && (\n        <div>\n          <h2>Available Computers</h2>\n          <ul>\n            {availableComputers.map((computer) => (\n              <li key={computer.computer_id}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"computer\"\n                    value={computer.computer_id}\n                    onChange={() => handleComputerSelect(computer.computer_id)}\n                  />\n                  Computer ID: {computer.computer_id} - Status: {computer.status}\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <button onClick={handleReserve}>Reserve Computer</button>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}