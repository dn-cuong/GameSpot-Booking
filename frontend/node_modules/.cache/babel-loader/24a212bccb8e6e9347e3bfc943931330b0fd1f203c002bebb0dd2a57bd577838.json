{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n  const handleDateChange = async e => {\n    const selectedDate = e.target.value;\n    setDate(selectedDate);\n\n    // Chỉ gửi yêu cầu khi có giá trị ngày hợp lệ\n    if (selectedDate) {\n      try {\n        const response = await axios.get(`/api/computers?date=${selectedDate}`);\n        setAvailableComputers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching available computers:\", error);\n        setAvailableComputers([]); // Reset danh sách máy tính khi có lỗi\n      }\n    } else {\n      setAvailableComputers([]); // Reset danh sách máy tính nếu không có ngày\n    }\n  };\n  const handleReserve = async () => {\n    if (!date || !selectedComputer) {\n      setMessage(\"Please select a date and a computer to reserve.\");\n      return;\n    }\n    try {\n      const response = await axios.post('/reserve', {\n        date: date,\n        computer_id: selectedComputer\n      });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/'); // Chuyển hướng về trang chủ sau 2 giây\n      }, 2000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error making reservation:\", error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error making reservation\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Select Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Computers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), availableComputers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableComputers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"computer\",\n              value: computer.computer_id,\n              onChange: () => setSelectedComputer(computer.computer_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), ` Computer ID: ${computer.computer_id} - Status: ${computer.status}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, computer.computer_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No available computers for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      disabled: !date,\n      children: \"Reserve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"TJa0KgKawLmrJ19y7YUtKZKZVpQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","availableComputers","setAvailableComputers","selectedComputer","setSelectedComputer","message","setMessage","token","localStorage","getItem","handleDateChange","e","selectedDate","target","value","response","get","data","error","console","handleReserve","post","computer_id","setTimeout","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","length","map","computer","name","status","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [availableComputers, setAvailableComputers] = useState([]);\n  const [selectedComputer, setSelectedComputer] = useState(null);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  const handleDateChange = async (e) => {\n    const selectedDate = e.target.value;\n    setDate(selectedDate);\n\n    // Chỉ gửi yêu cầu khi có giá trị ngày hợp lệ\n    if (selectedDate) {\n      try {\n        const response = await axios.get(`/api/computers?date=${selectedDate}`);\n        setAvailableComputers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching available computers:\", error);\n        setAvailableComputers([]); // Reset danh sách máy tính khi có lỗi\n      }\n    } else {\n      setAvailableComputers([]); // Reset danh sách máy tính nếu không có ngày\n    }\n  };\n\n  const handleReserve = async () => {\n    if (!date || !selectedComputer) {\n      setMessage(\"Please select a date and a computer to reserve.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post('/reserve', {\n        date: date,\n        computer_id: selectedComputer,\n      });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/'); // Chuyển hướng về trang chủ sau 2 giây\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error making reservation:\", error);\n      setMessage(error.response?.data?.message || \"Error making reservation\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <div>\n        <label htmlFor=\"date\">Select Date:</label>\n        <input\n          type=\"date\"\n          id=\"date\"\n          value={date}\n          onChange={handleDateChange}\n        />\n      </div>\n      <div>\n        <h2>Available Computers</h2>\n        {availableComputers.length > 0 ? (\n          <ul>\n            {availableComputers.map((computer) => (\n              <li key={computer.computer_id}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"computer\"\n                    value={computer.computer_id}\n                    onChange={() => setSelectedComputer(computer.computer_id)}\n                  />\n                  {` Computer ID: ${computer.computer_id} - Status: ${computer.status}`}\n                </label>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No available computers for this date.</p>\n        )}\n      </div>\n      <button onClick={handleReserve} disabled={!date}>Reserve</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}