{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js\",\n  _s = $RefreshSig$();\n// src/pages/Reserve/Reserve.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = () => {\n  _s();\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [computers, setComputers] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n  const handleDateChange = async event => {\n    const selectedDate = event.target.value;\n    setDate(selectedDate);\n    try {\n      const response = await axios.post('/reserve', {\n        date: selectedDate\n      });\n      setComputers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching available computers:\", error);\n      setComputers([]);\n    }\n  };\n  const handleReserve = async computer_id => {\n    try {\n      const response = await axios.post('/reserve', {\n        date,\n        computer_id\n      });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      console.error(\"Error making reservation:\", error);\n      alert(\"Error making reservation\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reserve Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose a date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Computers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: computers.map(computer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Computer ID: \", computer.computer_id, \", Status: \", computer.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReserve(computer.computer_id),\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, computer.computer_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Reserve, \"IXa4oGt5mChffhTuls4Pu7uGH3Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Reserve","_s","navigate","date","setDate","computers","setComputers","token","localStorage","getItem","handleDateChange","event","selectedDate","target","value","response","post","data","error","console","handleReserve","computer_id","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","computer","status","onClick","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Reserve/Reserve.js"],"sourcesContent":["// src/pages/Reserve/Reserve.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reserve = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [computers, setComputers] = useState([]);\n  \n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/login'); // Nếu không có token, chuyển hướng đến trang login\n    }\n  }, [navigate]);\n\n  const handleDateChange = async (event) => {\n    const selectedDate = event.target.value;\n    setDate(selectedDate);\n\n    try {\n      const response = await axios.post('/reserve', { date: selectedDate });\n      setComputers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching available computers:\", error);\n      setComputers([]);\n    }\n  };\n\n  const handleReserve = async (computer_id) => {\n    try {\n      const response = await axios.post('/reserve', { date, computer_id });\n      alert(response.data.message); // Hiển thị thông báo khi đặt chỗ thành công\n    } catch (error) {\n      console.error(\"Error making reservation:\", error);\n      alert(\"Error making reservation\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reserve Page</h1>\n      <label>\n        Choose a date:\n        <input type=\"date\" onChange={handleDateChange} />\n      </label>\n      <h2>Available Computers:</h2>\n      <ul>\n        {computers.map((computer) => (\n          <li key={computer.computer_id}>\n            Computer ID: {computer.computer_id}, Status: {computer.status}\n            <button onClick={() => handleReserve(computer.computer_id)}>Reserve</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}