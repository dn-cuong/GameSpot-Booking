{"ast":null,"code":"var _jsxFileName = \"/Users/mit/booking-systemm/src/pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [currentDate, setCurrentDate] = useState(() => {\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    const year = today.getFullYear();\n    const date = today.getDate();\n    return `${month}/${date}/${year}`;\n  });\n  useEffect(() => {\n    // Fetch the machine data from the server\n    const fetchMachines = async () => {\n      try {\n        const response = await fetch('/dashboard');\n        const data = await response.json();\n        setMachines(data);\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    };\n    fetchMachines();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Machine Status for \", currentDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machine-list\",\n      children: machines.map((machine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `machine-item ${machine.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Machine ID: \", machine.computer_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", machine.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"NMYa8YCXWVFrU5JXRgQlt5N1hPE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","machines","setMachines","currentDate","setCurrentDate","today","Date","month","getMonth","year","getFullYear","date","getDate","fetchMachines","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","machine","index","status","computer_id","_c","$RefreshReg$"],"sources":["/Users/mit/booking-systemm/src/pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n    const [machines, setMachines] = useState([]);\n    const [currentDate, setCurrentDate] = useState(() => {\n        const today = new Date();\n        const month = today.getMonth() + 1;\n        const year = today.getFullYear();\n        const date = today.getDate();\n        return `${month}/${date}/${year}`;\n    });\n\n    useEffect(() => {\n        // Fetch the machine data from the server\n        const fetchMachines = async () => {\n            try {\n                const response = await fetch('/dashboard');\n                const data = await response.json();\n                setMachines(data);\n            } catch (error) {\n                console.error(\"Error fetching machine data:\", error);\n            }\n        };\n        fetchMachines();\n    }, []);\n\n    return (\n        <div className='text_wrapper'>\n            <h1>Machine Status for {currentDate}</h1>\n            <div className=\"machine-list\">\n                {machines.map((machine, index) => (\n                    <div key={index} className={`machine-item ${machine.status}`}>\n                        <p>Machine ID: {machine.computer_id}</p>\n                        <p>Status: {machine.status}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACjD,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,KAAK,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC;IAClC,MAAMC,IAAI,GAAGJ,KAAK,CAACK,WAAW,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAGN,KAAK,CAACO,OAAO,CAAC,CAAC;IAC5B,OAAO,GAAGL,KAAK,IAAII,IAAI,IAAIF,IAAI,EAAE;EACrC,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACZ;IACA,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCf,WAAW,CAACc,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IACDL,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBvB,OAAA;MAAAuB,QAAA,GAAI,qBAAmB,EAAClB,WAAW;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzC3B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBpB,QAAQ,CAACyB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB9B,OAAA;QAAiBsB,SAAS,EAAE,gBAAgBO,OAAO,CAACE,MAAM,EAAG;QAAAR,QAAA,gBACzDvB,OAAA;UAAAuB,QAAA,GAAG,cAAY,EAACM,OAAO,CAACG,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxC3B,OAAA;UAAAuB,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACE,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CArCID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}